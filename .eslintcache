[{"C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\index.js":"1","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\App.js":"3","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\components\\Header.js":"4","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\components\\Main.js":"5","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\components\\Cart.js":"6","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\Items.js":"7","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\components\\Product.js":"8"},{"size":547,"mtime":1610619530381,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1480,"mtime":1610612027228,"results":"12","hashOfConfig":"10"},{"size":1412,"mtime":1610620949744,"results":"13","hashOfConfig":"10"},{"size":980,"mtime":1610610389185,"results":"14","hashOfConfig":"10"},{"size":1944,"mtime":1610616330584,"results":"15","hashOfConfig":"10"},{"size":1288,"mtime":1610571797470,"results":"16","hashOfConfig":"10"},{"size":518,"mtime":1610556537855,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"11gyozb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\index.js",[],["38","39"],"C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\App.js",["40","41"],"import { useState } from \"react\";\nimport \"./App.css\";\nimport Cart from \"./components/Cart\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport items from \"./Items\";\n\nfunction App() {\n  const { products } = items;\n  const [cartItems, setCartItems] = useState([]);\n  const addItem = (product) => {\n    const isExist = cartItems.find((x) => x.id === product.id);\n    if (isExist) {\n      setCartItems(\n        cartItems.map((x) =>\n          x.id === product.id ? { ...isExist, qty: isExist.qty + 1 } : x\n        )\n      );\n    } else {\n      setCartItems([{ ...product, qty: 1 }, ...cartItems]);\n    }\n  };\n\n  const removeItem = (product) => {\n    const isExist = cartItems.find((x) => x.id === product.id);\n    if (isExist.qty < 2) {\n      setCartItems(cartItems.filter((x) => x.id !== product.id));\n    } else {\n      setCartItems(\n        cartItems.map((x) =>\n          x.id === product.id ? { ...isExist, qty: isExist.qty - 1 } : x\n        )\n      );\n    }\n  };\n\n  const deleteAll = () => {\n    if (cartItems.length >= 1) {\n      setCartItems([]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        className=\"header-section\"\n        cartItems={cartItems}\n        cartItems={cartItems}\n        deleteAll={deleteAll}\n        removeItem={removeItem}\n        addItem={addItem}\n      />\n      <div className=\"main-sec\">\n        <Main products={products} addItem={addItem} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\components\\Header.js",[],"C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\components\\Main.js",["42"],"import React, { useState } from \"react\";\r\nimport Product from \"./Product\";\r\nimport \"./Main.css\";\r\n\r\nconst Main = (props) => {\r\n  const { products, addItem } = props;\r\n  const [searchItems, setSearchItems] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"main-section\">\r\n      <h1 className=\"inlineBlock\">Products</h1>\r\n      <div className=\"searchBar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for Products..\"\r\n          onChange={(e) => setSearchItems(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"products-container\">\r\n        {products.filter((val) => {\r\n          if(searchItems === \"\"){\r\n            return val;\r\n          }\r\n          else if(val.name.toLowerCase().includes(searchItems.toLowerCase())){\r\n            return val;\r\n          }\r\n        }).map((product) => (\r\n          <Product key={product.id} product={product} addItem={addItem} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\components\\Cart.js",["43"],"import React from \"react\";\r\nimport \"./Cart.css\";\r\n\r\nconst Cart = (props) => {\r\n  const { cartItems, addItem, removeItem, deleteAll } = props;\r\n  const totalItemPrice = cartItems.reduce((a, c) => a + c.qty * c.price, 0);\r\n  const tax = totalItemPrice * 0.18;\r\n  const shippingCharge = totalItemPrice < 500 ? 50 : 0;\r\n  const totalPrice = totalItemPrice + tax + shippingCharge;\r\n  return (\r\n    <div className=\"cart-container\">\r\n      {cartItems.length !== 0 && (\r\n        <button onClick={deleteAll} className=\"deleteAll-button\">\r\n          Clear Cart\r\n        </button>\r\n      )}\r\n      <div className=\"cartItems-section\">\r\n        {cartItems.length === 0 && <h2 className=\"cartsection-title\">Cart is Empty :(</h2>}\r\n        {cartItems.map((item) => (\r\n          <div key={item.id} className=\"cartProduct-container\">\r\n            <div className=\"cartImage-container\">\r\n              <img src={item.image} />\r\n            </div>\r\n            <div className=\"product-details\">\r\n              <div className=\"itemName\">{item.name}</div>\r\n              <h3 className=\"itemQty\">{item.qty}</h3>\r\n              <button onClick={() => addItem(item)} className=\"addButton\">\r\n                +\r\n              </button>\r\n              <button onClick={() => removeItem(item)} className=\"removeButton\">\r\n                -\r\n              </button>\r\n            </div>\r\n            <div className=\"price\">{item.qty * item.price}</div>\r\n          </div>\r\n        ))}\r\n        {cartItems.length !== 0 && (\r\n          <>\r\n            <div className=\"line\"></div>\r\n            <div className=\"price-details\">\r\n              <h3>Total Item Price = ₹{totalItemPrice}</h3>\r\n              <h3>Tax GST =  ₹{tax.toFixed(0)}</h3>\r\n              <h3>Shipping Charge = ₹{shippingCharge}</h3>\r\n              <h2>Total Price = ₹{totalPrice.toFixed(0)}</h2>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\Items.js",[],"C:\\Users\\Sourav\\Desktop\\MERN Projects\\Cart\\client\\src\\components\\Product.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":48,"column":9,"nodeType":"54","endLine":48,"endColumn":30},{"ruleId":"55","severity":1,"message":"56","line":20,"column":32,"nodeType":"57","messageId":"58","endLine":20,"endColumn":34},{"ruleId":"59","severity":1,"message":"60","line":22,"column":15,"nodeType":"61","endLine":22,"endColumn":39},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Cart' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]